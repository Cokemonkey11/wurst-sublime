<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"
		"http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>wurst</string>
		<string>jurst</string>
	</array>

	<key>foldingStartMarker</key>
	<string>^\s*(function|class|scope|library|package|method|struct)\s+([.a-zA-Z0-9_ &lt;]+)\s*(\((.*)\))?\s*:|\{\s*$|\(\s*$|\[\s*$|^\s*"""(?=.)(?!.*""")</string>

	<key>foldingStopMarker</key>
	<string>^\s*$|^\s*\}|^\s*\]|^\s*\)|^\s*"""\s*$</string>

	<key>name</key>
	<string>Wurst</string>

	<key>patterns</key>
	<array>
		<!-- Comment -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\/\/).*$\n?</string>
			<key>name</key>
			<string>comment.line.number-sign.wurst</string>
		</dict>

		<!-- Long Comment -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.long-comment.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\/\*[^(\*\/)]*\*\/)</string>
			<key>name</key>
			<string>comment.line.block.wurst</string>
		</dict>

		<!-- Hex Number -->
		<dict>
			<key>match</key>
			<string>\b(?i:(0x\h*))</string>
			<key>name</key>
			<string>constant.numeric.integer.hexadecimal.wurst</string>
		</dict>

		<!-- Float 1 / 3 -->
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+\.\d*(e[\-\+]?\d+)?))(?=[^a-zA-Z_])</string>
			<key>name</key>
			<string>constant.numeric.float.wurst</string>
		</dict>

		<!-- Float 2 / 3 -->
		<dict>
			<key>match</key>
			<string>(?&lt;=[^0-9a-zA-Z_])(?i:(\.\d+(e[\-\+]?\d+)?))</string>
			<key>name</key>
			<string>constant.numeric.float.wurst</string>
		</dict>

		<!-- Float 3 / 3 -->
		<dict>
			<key>match</key>
			<string>\b(?i:(\d+e[\-\+]?\d+))</string>
			<key>name</key>
			<string>constant.numeric.float.wurst</string>
		</dict>

		<!-- Integer -->
		<dict>
			<key>match</key>
			<string>\b([0-9]+)</string>
			<key>name</key>
			<string>constant.numeric.integer.decimal.wurst</string>
		</dict>

		<!-- Import -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.import.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(?:(import))\b</string>
		</dict>

		<!-- Control/Flow -->
		<dict>
			<key>comment</key>
			<string>keywords that delimit flow blocks or alter flow from within a block</string>
			<key>match</key>
			<string>\b(else|for|if|while|break|return|in|skip|case|default|then|exitwhen|elseif|endif|then|loop)\b</string>
			<key>name</key>
			<string>keyword.control.flow.wurst</string>
		</dict>

		<!-- Logic Operators -->
		<dict>
			<key>comment</key>
			<string>keyword operators that evaluate to True or False</string>
			<key>match</key>
			<string>\b(and|in|not|or)\b</string>
			<key>name</key>
			<string>keyword.operator.logical.wurst</string>
		</dict>

		<!-- Logical Character Operators -->
		<dict>
			<key>match</key>
			<string>&lt;\=|&gt;\=|\=\=|&lt;|&gt;|\!\=</string>
			<key>name</key>
			<string>keyword.operator.comparison.wurst</string>
		</dict>

		<!-- Augmented Assignment -->
		<dict>
			<key>match</key>
			<string>\+\=|-\=|\*\=|/\=|</string>
			<key>name</key>
			<string>keyword.operator.assignment.augmented.wurst</string>
		</dict>

		<!-- Arithmetic Operators -->
		<dict>
			<key>match</key>
			<string>\+|\-|\*|\*\*|/|//|%|&lt;&lt;|&gt;&gt;|&amp;|\||\^|~</string>
			<key>name</key>
			<string>keyword.operator.arithmetic.wurst</string>
		</dict>

		<!-- Assignment Operator Equals -->
		<dict>
			<key>match</key>
			<string>\=</string>
			<key>name</key>
			<string>keyword.operator.assignment.wurst</string>
		</dict>

		<!-- Class -->
		<dict>
			<key>begin</key>
			<string>^\s*(class|struct)\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\s*\:)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.wurst</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>entity.name.type.class.wurst</string>
			<key>end</key>
			<string>\s*(:)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.old-style.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#entity_name_class</string>
				</dict>
			</array>
		</dict>

		<!-- Class -->
		<dict>
			<key>begin</key>
			<string>^\s*(class|struct)\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\s*\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.wurst</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))\s*(?:(\:)|(.*$\n?))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.end.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.class.begin.wurst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-section-begin.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.wurst</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_class</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.inheritance.begin.wurst</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.class.inheritance.wurst</string>
					<key>end</key>
					<string>(?=\)|:)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(?&lt;=\(|,)\s*</string>
							<key>contentName</key>
							<string>entity.other.inherited-class.wurst</string>
							<key>end</key>
							<string>\s*(?:(,)|(?=\)))</string>
							<key>endCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.inheritance.wurst</string>
								</dict>
							</dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>$self</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- Class -->
		<dict>
			<key>begin</key>
			<string>^\s*(class)\s+(?=[a-zA-Z_][a-zA-Z_0-9])</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.wurst</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\()|\s*($\n?|#.*$\n?)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.inheritance.begin.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.missing-inheritance.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.class.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.type.class.wurst</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- function hello() returns nothing -->
		<!-- function hello takes unit u returns nothing -->
		<dict>
			<key>begin</key>
			<string>^\s*(function|method)\s+(?=[A-Za-z_][A-Za-z0-9_]*\s*(\(|takes))</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.wurst</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\)\s*|\)\s*returns[a-zA-Z0-9 ]*|\s*returns[a-zA-Z0-9 ]*)(\n)</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.function.begin.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.wurst</string>

			<!-- Function Contents -->
			<key>patterns</key>
			<array>
				<!-- Function Name -->
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>contentName</key>
					<string>entity.name.function.wurst</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#entity_name_function</string>
						</dict>
					</array>
				</dict>

				<!-- Parameters -->
				<dict>
					<key>begin</key>
					<string>(\(|takes)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.wurst</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.parameters.wurst</string>
					<key>end</key>
					<string>((?=\)|returns)\s*)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>

						<!-- Arguments like int name, val bob -->
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>variable.parameter.function.wurst</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.separator.parameters.wurst</string>
								</dict>
							</dict>
							<key>match</key>
							<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(?:(,)|(?=[\n\)]))</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- Decorators ? -->
		<dict>
			<key>begin</key>
			<string>^\s*(?=@\s*[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\()</string>
			<key>comment</key>
			<string>a decorator may be a function call which returns a decorator.</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.decorator.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(@)\s*[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.decorator.wurst</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>entity.name.function.decorator.wurst</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.wurst</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function.decorator.arguments.wurst</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- "Dotted Name" -->
		<dict>
			<key>begin</key>
			<string>^\s*(?=@\s*[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*)</string>
			<key>contentName</key>
			<string>entity.name.function.decorator.wurst</string>
			<key>end</key>
			<string>(?=\s|$\n?|#)</string>
			<key>name</key>
			<string>meta.function.decorator.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=(@)\s*[A-Za-z_][A-Za-z0-9_]*(\.[A-Za-z_][A-Za-z0-9_]*)*)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.decorator.wurst</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?=\s|$\n?|#)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- Function arguments -->
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\()</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.wurst</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.function-call.arguments.wurst</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#keyword_arguments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>

		<!-- Function arguments end -->
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function-call.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\()</string>
					<key>end</key>
					<string>(?=\s*\()</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.wurst</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.function-call.arguments.wurst</string>
					<key>end</key>
					<string>(?=\))</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#keyword_arguments</string>
						</dict>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- Function arguments end -->
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[a-zA-Z_][a-zA-Z_0-9]*)*\s*\[)</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*\s*\[)</string>
					<key>end</key>
					<string>(?=\s*\[)</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#dotted_name</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(\[)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.arguments.begin.wurst</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.item-access.arguments.wurst</string>
					<key>end</key>
					<string>(?=\])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- Function arguments begin -->
		<dict>
			<key>begin</key>
			<string>(?&lt;=\)|\])\s*(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.begin.wurst</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>meta.item-access.arguments.wurst</string>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.arguments.end.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.item-access.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>

		<!-- Function -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(function|method)\b</string>
		</dict>

		<!-- Class -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.class.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>\b(class|struct)\b</string>
		</dict>

		<!-- Include Line Continuations -->
		<dict>
			<key>include</key>
			<string>#line_continuation</string>
		</dict>

		<!-- Include Language Variables -->
		<dict>
			<key>include</key>
			<string>#language_variables</string>
		</dict>

		<!-- ? -->
		<dict>
			<key>include</key>
			<string>#string_quoted_single</string>
		</dict>

		<!-- ? -->
		<dict>
			<key>include</key>
			<string>#string_quoted_double</string>
		</dict>

		<!-- ? -->
		<dict>
			<key>include</key>
			<string>#dotted_name</string>
		</dict>

		<!-- ? -->
		<dict>
			<key>begin</key>
			<string>(\()</string>
			<key>end</key>
			<string>(\))</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>

		<!-- ? -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-list.wurst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\[)(\s*(\]))\b</string>
		</dict>

		<!-- ? -->
		<dict>
			<key>begin</key>
			<string>(\[)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.begin.wurst</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.list.end.wurst</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.structure.list.wurst</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?&lt;=\[|\,)\s*(?![\],])</string>
					<key>contentName</key>
					<string>meta.structure.list.item.wurst</string>
					<key>end</key>
					<string>\s*(?:(,)|(?=\]))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.separator.list.wurst</string>
						</dict>
					</dict>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>$self</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>

		<!-- Tuple -->
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.begin.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>meta.empty-tuple.wurst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.tuple.end.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\()(\s*(\)))</string>
			<key>name</key>
			<string>meta.structure.tuple.wurst</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>builtin_functions</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
                UnitAlive|ConvertRace|ConvertAllianceType|ConvertRacePref|ConvertIGameState|ConvertFGameState|ConvertPlayerState|ConvertPlayerScore|ConvertPlayerGameResult|ConvertUnitState|ConvertAIDifficulty|ConvertGameEvent|ConvertPlayerEvent|ConvertPlayerUnitEvent|ConvertWidgetEvent|ConvertDialogEvent|ConvertUnitEvent|ConvertLimitOp|ConvertUnitType|ConvertGameSpeed|ConvertPlacement|ConvertStartLocPrio|ConvertGameDifficulty|ConvertGameType|ConvertMapFlag|ConvertMapVisibility|ConvertMapSetting|ConvertMapDensity|ConvertMapControl|ConvertPlayerColor|ConvertPlayerSlotState|ConvertVolumeGroup|ConvertCameraField|ConvertBlendMode|ConvertRarityControl|ConvertTexMapFlags|ConvertFogState|ConvertEffectType|ConvertVersion|ConvertItemType|ConvertAttackType|ConvertDamageType|ConvertWeaponType|ConvertSoundType|ConvertPathingType|OrderId|OrderId2String|UnitId|UnitId2String|AbilityId|AbilityId2String|GetObjectName|Deg2Rad|Rad2Deg|Sin|Cos|Tan|Asin|Acos|Atan|Atan2|SquareRoot|Pow|I2R|R2I|I2S|R2S|R2SW|S2I|S2R|GetHandleId|SubString|StringLength|StringCase|StringHash|GetLocalizedString|GetLocalizedHotkey|SetMapName|SetMapDescription|SetTeams|SetPlayers|DefineStartLocation|DefineStartLocationLoc|SetStartLocPrioCount|SetStartLocPrio|GetStartLocPrioSlot|GetStartLocPrio|SetGameTypeSupported|SetMapFlag|SetGamePlacement|SetGameSpeed|SetGameDifficulty|SetResourceDensity|SetCreatureDensity|GetTeams|GetPlayers|IsGameTypeSupported|GetGameTypeSelected|IsMapFlagSet|GetGamePlacement|GetGameSpeed|GetGameDifficulty|GetResourceDensity|GetCreatureDensity|GetStartLocationX|GetStartLocationY|GetStartLocationLoc|SetPlayerTeam|SetPlayerStartLocation|ForcePlayerStartLocation|SetPlayerColor|SetPlayerAlliance|SetPlayerTaxRate|SetPlayerRacePreference|SetPlayerRaceSelectable|SetPlayerController|SetPlayerName|SetPlayerOnScoreScreen|GetPlayerTeam|GetPlayerStartLocation|GetPlayerColor|GetPlayerSelectable|GetPlayerController|GetPlayerSlotState|GetPlayerTaxRate|IsPlayerRacePrefSet|GetPlayerName|CreateTimer|DestroyTimer|TimerStart|TimerGetElapsed|TimerGetRemaining|TimerGetTimeout|PauseTimer|ResumeTimer|GetExpiredTimer|CreateGroup|DestroyGroup|GroupAddUnit|GroupRemoveUnit|GroupClear|GroupEnumUnitsOfType|GroupEnumUnitsOfPlayer|GroupEnumUnitsOfTypeCounted|GroupEnumUnitsInRect|GroupEnumUnitsInRectCounted|GroupEnumUnitsInRange|GroupEnumUnitsInRangeOfLoc|GroupEnumUnitsInRangeCounted|GroupEnumUnitsInRangeOfLocCounted|GroupEnumUnitsSelected|GroupImmediateOrder|GroupImmediateOrderById|GroupPointOrder|GroupPointOrderLoc|GroupPointOrderById|GroupPointOrderByIdLoc|GroupTargetOrder|GroupTargetOrderById|ForGroup|FirstOfGroup|CreateForce|DestroyForce|ForceAddPlayer|ForceRemovePlayer|ForceClear|ForceEnumPlayers|ForceEnumPlayersCounted|ForceEnumAllies|ForceEnumEnemies|ForForce|Rect|RectFromLoc|RemoveRect|SetRect|SetRectFromLoc|MoveRectTo|MoveRectToLoc|GetRectCenterX|GetRectCenterY|GetRectMinX|GetRectMinY|GetRectMaxX|GetRectMaxY|CreateRegion|RemoveRegion|RegionAddRect|RegionClearRect|RegionAddCell|RegionAddCellAtLoc|RegionClearCell|RegionClearCellAtLoc|Location|RemoveLocation|MoveLocation|GetLocationX|GetLocationY|GetLocationZ|IsUnitInRegion|IsPointInRegion|IsLocationInRegion|GetWorldBounds|CreateTrigger|DestroyTrigger|ResetTrigger|EnableTrigger|DisableTrigger|IsTriggerEnabled|TriggerWaitOnSleeps|IsTriggerWaitOnSleeps|GetFilterUnit|GetEnumUnit|GetFilterDestructable|GetEnumDestructable|GetFilterItem|GetEnumItem|GetFilterPlayer|GetEnumPlayer|GetTriggeringTrigger|GetTriggerEventId|GetTriggerEvalCount|GetTriggerExecCount|ExecuteFunc|And|Or|Not|Condition|DestroyCondition|Filter|DestroyFilter|DestroyBoolExpr|TriggerRegisterVariableEvent|TriggerRegisterTimerEvent|TriggerRegisterTimerExpireEvent|TriggerRegisterGameStateEvent|TriggerRegisterDialogEvent|TriggerRegisterDialogButtonEvent|GetEventGameState|TriggerRegisterGameEvent|GetWinningPlayer|TriggerRegisterEnterRegion|GetTriggeringRegion|GetEnteringUnit|TriggerRegisterLeaveRegion|GetLeavingUnit|TriggerRegisterTrackableHitEvent|TriggerRegisterTrackableTrackEvent|GetTriggeringTrackable|GetClickedButton|GetClickedDialog|GetTournamentFinishSoonTimeRemaining|GetTournamentFinishNowRule|GetTournamentFinishNowPlayer|GetTournamentScore|GetSaveBasicFilename|TriggerRegisterPlayerEvent|GetTriggerPlayer|TriggerRegisterPlayerUnitEvent|GetLevelingUnit|GetLearningUnit|GetLearnedSkill|GetLearnedSkillLevel|GetRevivableUnit|GetRevivingUnit|GetAttacker|GetRescuer|GetDyingUnit|GetKillingUnit|GetDecayingUnit|GetConstructingStructure|GetCancelledStructure|GetConstructedStructure|GetResearchingUnit|GetResearched|GetTrainedUnitType|GetTrainedUnit|GetDetectedUnit|GetSummoningUnit|GetSummonedUnit|GetTransportUnit|GetLoadedUnit|GetSellingUnit|GetSoldUnit|GetBuyingUnit|GetSoldItem|GetChangingUnit|GetChangingUnitPrevOwner|GetManipulatingUnit|GetManipulatedItem|GetOrderedUnit|GetIssuedOrderId|GetOrderPointX|GetOrderPointY|GetOrderPointLoc|GetOrderTarget|GetOrderTargetDestructable|GetOrderTargetItem|GetOrderTargetUnit|GetSpellAbilityUnit|GetSpellAbilityId|GetSpellAbility|GetSpellTargetLoc|GetSpellTargetX|GetSpellTargetY|GetSpellTargetDestructable|GetSpellTargetItem|GetSpellTargetUnit|TriggerRegisterPlayerAllianceChange|TriggerRegisterPlayerStateEvent|GetEventPlayerState|TriggerRegisterPlayerChatEvent|GetEventPlayerChatString|GetEventPlayerChatStringMatched|TriggerRegisterDeathEvent|GetTriggerUnit|TriggerRegisterUnitStateEvent|GetEventUnitState|TriggerRegisterUnitEvent|GetEventDamage|GetEventDamageSource|GetEventDetectingPlayer|TriggerRegisterFilterUnitEvent|GetEventTargetUnit|TriggerRegisterUnitInRange|TriggerAddCondition|TriggerRemoveCondition|TriggerClearConditions|TriggerAddAction|TriggerRemoveAction|TriggerClearActions|TriggerSleepAction|TriggerWaitForSound|TriggerEvaluate|TriggerExecute|TriggerExecuteWait|TriggerSyncStart|TriggerSyncReady|GetWidgetLife|SetWidgetLife|GetWidgetX|GetWidgetY|GetTriggerWidget|CreateDestructable|CreateDestructableZ|CreateDeadDestructable|CreateDeadDestructableZ|RemoveDestructable|KillDestructable|SetDestructableInvulnerable|IsDestructableInvulnerable|EnumDestructablesInRect|GetDestructableTypeId|GetDestructableX|GetDestructableY|SetDestructableLife|GetDestructableLife|SetDestructableMaxLife|GetDestructableMaxLife|DestructableRestoreLife|QueueDestructableAnimation|SetDestructableAnimation|SetDestructableAnimationSpeed|ShowDestructable|GetDestructableOccluderHeight|SetDestructableOccluderHeight|GetDestructableName|GetTriggerDestructable|CreateItem|RemoveItem|GetItemPlayer|GetItemTypeId|GetItemX|GetItemY|SetItemPosition|SetItemDropOnDeath|SetItemDroppable|SetItemPawnable|SetItemPlayer|SetItemInvulnerable|IsItemInvulnerable|SetItemVisible|IsItemVisible|IsItemOwned|IsItemPowerup|IsItemSellable|IsItemPawnable|IsItemIdPowerup|IsItemIdSellable|IsItemIdPawnable|EnumItemsInRect|GetItemLevel|GetItemType|SetItemDropID|GetItemName|GetItemCharges|SetItemCharges|GetItemUserData|SetItemUserData|CreateUnit|CreateUnitByName|CreateUnitAtLoc|CreateUnitAtLocByName|CreateCorpse|KillUnit|RemoveUnit|ShowUnit|SetUnitState|SetUnitX|SetUnitY|SetUnitPosition|SetUnitPositionLoc|SetUnitFacing|SetUnitFacingTimed|SetUnitMoveSpeed|SetUnitFlyHeight|SetUnitTurnSpeed|SetUnitPropWindow|SetUnitAcquireRange|SetUnitCreepGuard|GetUnitAcquireRange|GetUnitTurnSpeed|GetUnitPropWindow|GetUnitFlyHeight|GetUnitDefaultAcquireRange|GetUnitDefaultTurnSpeed|GetUnitDefaultPropWindow|GetUnitDefaultFlyHeight|SetUnitOwner|SetUnitColor|SetUnitScale|SetUnitTimeScale|SetUnitBlendTime|SetUnitVertexColor|QueueUnitAnimation|SetUnitAnimation|SetUnitAnimationByIndex|SetUnitAnimationWithRarity|AddUnitAnimationProperties|SetUnitLookAt|ResetUnitLookAt|SetUnitRescuable|SetUnitRescueRange|SetHeroStr|SetHeroAgi|SetHeroInt|GetHeroStr|GetHeroAgi|GetHeroInt|UnitStripHeroLevel|GetHeroXP|SetHeroXP|GetHeroSkillPoints|UnitModifySkillPoints|AddHeroXP|SetHeroLevel|GetHeroLevel|GetUnitLevel|GetHeroProperName|SuspendHeroXP|IsSuspendedXP|SelectHeroSkill|GetUnitAbilityLevel|DecUnitAbilityLevel|IncUnitAbilityLevel|SetUnitAbilityLevel|ReviveHero|ReviveHeroLoc|SetUnitExploded|SetUnitInvulnerable|PauseUnit|IsUnitPaused|SetUnitPathing|ClearSelection|SelectUnit|GetUnitPointValue|GetUnitPointValueByType|UnitAddItem|UnitAddItemById|UnitAddItemToSlotById|UnitRemoveItem|UnitRemoveItemFromSlot|UnitHasItem|UnitItemInSlot|UnitInventorySize|UnitDropItemPoint|UnitDropItemSlot|UnitDropItemTarget|UnitUseItem|UnitUseItemPoint|UnitUseItemTarget|GetUnitX|GetUnitY|GetUnitLoc|GetUnitFacing|GetUnitMoveSpeed|GetUnitDefaultMoveSpeed|GetUnitState|GetOwningPlayer|GetUnitTypeId|GetUnitRace|GetUnitName|GetUnitFoodUsed|GetUnitFoodMade|GetFoodMade|GetFoodUsed|SetUnitUseFood|GetUnitRallyPoint|GetUnitRallyUnit|GetUnitRallyDestructable|IsUnitInGroup|IsUnitInForce|IsUnitOwnedByPlayer|IsUnitAlly|IsUnitEnemy|IsUnitVisible|IsUnitDetected|IsUnitInvisible|IsUnitFogged|IsUnitMasked|IsUnitSelected|IsUnitRace|IsUnitType|IsUnit|IsUnitInRange|IsUnitInRangeXY|IsUnitInRangeLoc|IsUnitHidden|IsUnitIllusion|IsUnitInTransport|IsUnitLoaded|IsHeroUnitId|IsUnitIdType|UnitShareVision|UnitSuspendDecay|UnitAddType|UnitRemoveType|UnitAddAbility|UnitRemoveAbility|UnitMakeAbilityPermanent|UnitRemoveBuffs|UnitRemoveBuffsEx|UnitHasBuffsEx|UnitCountBuffsEx|UnitAddSleep|UnitCanSleep|UnitAddSleepPerm|UnitCanSleepPerm|UnitIsSleeping|UnitWakeUp|UnitApplyTimedLife|UnitIgnoreAlarm|UnitIgnoreAlarmToggled|UnitResetCooldown|UnitSetConstructionProgress|UnitSetUpgradeProgress|UnitPauseTimedLife|UnitSetUsesAltIcon|UnitDamagePoint|UnitDamageTarget|IssueImmediateOrder|IssueImmediateOrderById|IssuePointOrder|IssuePointOrderLoc|IssuePointOrderById|IssuePointOrderByIdLoc|IssueTargetOrder|IssueTargetOrderById|IssueInstantPointOrder|IssueInstantPointOrderById|IssueInstantTargetOrder|IssueInstantTargetOrderById|IssueBuildOrder|IssueBuildOrderById|IssueNeutralImmediateOrder|IssueNeutralImmediateOrderById|IssueNeutralPointOrder|IssueNeutralPointOrderById|IssueNeutralTargetOrder|IssueNeutralTargetOrderById|GetUnitCurrentOrder|SetResourceAmount|AddResourceAmount|GetResourceAmount|WaygateGetDestinationX|WaygateGetDestinationY|WaygateSetDestination|WaygateActivate|WaygateIsActive|AddItemToAllStock|AddItemToStock|AddUnitToAllStock|AddUnitToStock|RemoveItemFromAllStock|RemoveItemFromStock|RemoveUnitFromAllStock|RemoveUnitFromStock|SetAllItemTypeSlots|SetAllUnitTypeSlots|SetItemTypeSlots|SetUnitTypeSlots|GetUnitUserData|SetUnitUserData|Player|GetLocalPlayer|IsPlayerAlly|IsPlayerEnemy|IsPlayerInForce|IsPlayerObserver|IsVisibleToPlayer|IsLocationVisibleToPlayer|IsFoggedToPlayer|IsLocationFoggedToPlayer|IsMaskedToPlayer|IsLocationMaskedToPlayer|GetPlayerRace|GetPlayerId|GetPlayerUnitCount|GetPlayerTypedUnitCount|GetPlayerStructureCount|GetPlayerState|GetPlayerScore|GetPlayerAlliance|GetPlayerHandicap|GetPlayerHandicapXP|SetPlayerHandicap|SetPlayerHandicapXP|SetPlayerTechMaxAllowed|GetPlayerTechMaxAllowed|AddPlayerTechResearched|SetPlayerTechResearched|GetPlayerTechResearched|GetPlayerTechCount|SetPlayerUnitsOwner|CripplePlayer|SetPlayerAbilityAvailable|SetPlayerState|RemovePlayer|CachePlayerHeroData|SetFogStateRect|SetFogStateRadius|SetFogStateRadiusLoc|FogMaskEnable|IsFogMaskEnabled|FogEnable|IsFogEnabled|CreateFogModifierRect|CreateFogModifierRadius|CreateFogModifierRadiusLoc|DestroyFogModifier|FogModifierStart|FogModifierStop|VersionGet|VersionCompatible|VersionSupported|EndGame|ChangeLevel|RestartGame|ReloadGame|SetCampaignMenuRace|SetCampaignMenuRaceEx|ForceCampaignSelectScreen|LoadGame|SaveGame|RenameSaveDirectory|RemoveSaveDirectory|CopySaveGame|SaveGameExists|SyncSelections|SetFloatGameState|GetFloatGameState|SetIntegerGameState|GetIntegerGameState|SetTutorialCleared|SetMissionAvailable|SetCampaignAvailable|SetOpCinematicAvailable|SetEdCinematicAvailable|GetDefaultDifficulty|SetDefaultDifficulty|SetCustomCampaignButtonVisible|GetCustomCampaignButtonVisible|DoNotSaveReplay|DialogCreate|DialogDestroy|DialogClear|DialogSetMessage|DialogAddButton|DialogAddQuitButton|DialogDisplay|ReloadGameCachesFromDisk|InitGameCache|SaveGameCache|StoreInteger|StoreReal|StoreBoolean|StoreUnit|StoreString|SyncStoredInteger|SyncStoredReal|SyncStoredBoolean|SyncStoredUnit|SyncStoredString|HaveStoredInteger|HaveStoredReal|HaveStoredBoolean|HaveStoredUnit|HaveStoredString|FlushGameCache|FlushStoredMission|FlushStoredInteger|FlushStoredReal|FlushStoredBoolean|FlushStoredUnit|FlushStoredString|GetStoredInteger|GetStoredReal|GetStoredBoolean|GetStoredString|RestoreUnit|InitHashtable|SaveInteger|SaveReal|SaveBoolean|SaveStr|SavePlayerHandle|SaveWidgetHandle|SaveDestructableHandle|SaveItemHandle|SaveUnitHandle|SaveAbilityHandle|SaveTimerHandle|SaveTriggerHandle|SaveTriggerConditionHandle|SaveTriggerActionHandle|SaveTriggerEventHandle|SaveForceHandle|SaveGroupHandle|SaveLocationHandle|SaveRectHandle|SaveBooleanExprHandle|SaveSoundHandle|SaveEffectHandle|SaveUnitPoolHandle|SaveItemPoolHandle|SaveQuestHandle|SaveQuestItemHandle|SaveDefeatConditionHandle|SaveTimerDialogHandle|SaveLeaderboardHandle|SaveMultiboardHandle|SaveMultiboardItemHandle|SaveTrackableHandle|SaveDialogHandle|SaveButtonHandle|SaveTextTagHandle|SaveLightningHandle|SaveImageHandle|SaveUbersplatHandle|SaveRegionHandle|SaveFogStateHandle|SaveFogModifierHandle|SaveAgentHandle|SaveHashtableHandle|LoadInteger|LoadReal|LoadBoolean|LoadStr|LoadPlayerHandle|LoadWidgetHandle|LoadDestructableHandle|LoadItemHandle|LoadUnitHandle|LoadAbilityHandle|LoadTimerHandle|LoadTriggerHandle|LoadTriggerConditionHandle|LoadTriggerActionHandle|LoadTriggerEventHandle|LoadForceHandle|LoadGroupHandle|LoadLocationHandle|LoadRectHandle|LoadBooleanExprHandle|LoadSoundHandle|LoadEffectHandle|LoadUnitPoolHandle|LoadItemPoolHandle|LoadQuestHandle|LoadQuestItemHandle|LoadDefeatConditionHandle|LoadTimerDialogHandle|LoadLeaderboardHandle|LoadMultiboardHandle|LoadMultiboardItemHandle|LoadTrackableHandle|LoadDialogHandle|LoadButtonHandle|LoadTextTagHandle|LoadLightningHandle|LoadImageHandle|LoadUbersplatHandle|LoadRegionHandle|LoadFogStateHandle|LoadFogModifierHandle|LoadHashtableHandle|HaveSavedInteger|HaveSavedReal|HaveSavedBoolean|HaveSavedString|HaveSavedHandle|RemoveSavedInteger|RemoveSavedReal|RemoveSavedBoolean|RemoveSavedString|RemoveSavedHandle|FlushParentHashtable|FlushChildHashtable|GetRandomInt|GetRandomReal|CreateUnitPool|DestroyUnitPool|UnitPoolAddUnitType|UnitPoolRemoveUnitType|PlaceRandomUnit|CreateItemPool|DestroyItemPool|ItemPoolAddItemType|ItemPoolRemoveItemType|PlaceRandomItem|ChooseRandomCreep|ChooseRandomNPBuilding|ChooseRandomItem|ChooseRandomItemEx|SetRandomSeed|SetTerrainFog|ResetTerrainFog|SetUnitFog|SetTerrainFogEx|DisplayTextToPlayer|DisplayTimedTextToPlayer|DisplayTimedTextFromPlayer|ClearTextMessages|SetDayNightModels|SetSkyModel|EnableUserControl|EnableUserUI|SuspendTimeOfDay|SetTimeOfDayScale|GetTimeOfDayScale|ShowInterface|PauseGame|UnitAddIndicator|AddIndicator|PingMinimap|PingMinimapEx|EnableOcclusion|SetIntroShotText|SetIntroShotModel|EnableWorldFogBoundary|PlayModelCinematic|PlayCinematic|ForceUIKey|ForceUICancel|DisplayLoadDialog|SetAltMinimapIcon|DisableRestartMission|CreateTextTag|DestroyTextTag|SetTextTagText|SetTextTagPos|SetTextTagPosUnit|SetTextTagColor|SetTextTagVelocity|SetTextTagVisibility|SetTextTagSuspended|SetTextTagPermanent|SetTextTagAge|SetTextTagLifespan|SetTextTagFadepoint|SetReservedLocalHeroButtons|GetAllyColorFilterState|SetAllyColorFilterState|GetCreepCampFilterState|SetCreepCampFilterState|EnableMinimapFilterButtons|EnableDragSelect|EnablePreSelect|EnableSelect|CreateTrackable|CreateQuest|DestroyQuest|QuestSetTitle|QuestSetDescription|QuestSetIconPath|QuestSetRequired|QuestSetCompleted|QuestSetDiscovered|QuestSetFailed|QuestSetEnabled|IsQuestRequired|IsQuestCompleted|IsQuestDiscovered|IsQuestFailed|IsQuestEnabled|QuestCreateItem|QuestItemSetDescription|QuestItemSetCompleted|IsQuestItemCompleted|CreateDefeatCondition|DestroyDefeatCondition|DefeatConditionSetDescription|FlashQuestDialogButton|ForceQuestDialogUpdate|CreateTimerDialog|DestroyTimerDialog|TimerDialogSetTitle|TimerDialogSetTitleColor|TimerDialogSetTimeColor|TimerDialogSetSpeed|TimerDialogDisplay|IsTimerDialogDisplayed|TimerDialogSetRealTimeRemaining|CreateLeaderboard|DestroyLeaderboard|LeaderboardDisplay|IsLeaderboardDisplayed|LeaderboardGetItemCount|LeaderboardSetSizeByItemCount|LeaderboardAddItem|LeaderboardRemoveItem|LeaderboardRemovePlayerItem|LeaderboardClear|LeaderboardSortItemsByValue|LeaderboardSortItemsByPlayer|LeaderboardSortItemsByLabel|LeaderboardHasPlayerItem|LeaderboardGetPlayerIndex|LeaderboardSetLabel|LeaderboardGetLabelText|PlayerSetLeaderboard|PlayerGetLeaderboard|LeaderboardSetLabelColor|LeaderboardSetValueColor|LeaderboardSetStyle|LeaderboardSetItemValue|LeaderboardSetItemLabel|LeaderboardSetItemStyle|LeaderboardSetItemLabelColor|LeaderboardSetItemValueColor|CreateMultiboard|DestroyMultiboard|MultiboardDisplay|IsMultiboardDisplayed|MultiboardMinimize|IsMultiboardMinimized|MultiboardClear|MultiboardSetTitleText|MultiboardGetTitleText|MultiboardSetTitleTextColor|MultiboardGetRowCount|MultiboardGetColumnCount|MultiboardSetColumnCount|MultiboardSetRowCount|MultiboardSetItemsStyle|MultiboardSetItemsValue|MultiboardSetItemsValueColor|MultiboardSetItemsWidth|MultiboardSetItemsIcon|MultiboardGetItem|MultiboardReleaseItem|MultiboardSetItemStyle|MultiboardSetItemValue|MultiboardSetItemValueColor|MultiboardSetItemWidth|MultiboardSetItemIcon|MultiboardSuppressDisplay|SetCameraPosition|SetCameraQuickPosition|SetCameraBounds|StopCamera|ResetToGameCamera|PanCameraTo|PanCameraToTimed|PanCameraToWithZ|PanCameraToTimedWithZ|SetCinematicCamera|SetCameraRotateMode|SetCameraField|AdjustCameraField|SetCameraTargetController|SetCameraOrientController|CreateCameraSetup|CameraSetupSetField|CameraSetupGetField|CameraSetupSetDestPosition|CameraSetupGetDestPositionLoc|CameraSetupGetDestPositionX|CameraSetupGetDestPositionY|CameraSetupApply|CameraSetupApplyWithZ|CameraSetupApplyForceDuration|CameraSetupApplyForceDurationWithZ|CameraSetTargetNoise|CameraSetSourceNoise|CameraSetTargetNoiseEx|CameraSetSourceNoiseEx|CameraSetSmoothingFactor|SetCineFilterTexture|SetCineFilterBlendMode|SetCineFilterTexMapFlags|SetCineFilterStartUV|SetCineFilterEndUV|SetCineFilterStartColor|SetCineFilterEndColor|SetCineFilterDuration|DisplayCineFilter|IsCineFilterDisplayed|SetCinematicScene|EndCinematicScene|ForceCinematicSubtitles|GetCameraMargin|GetCameraBoundMinX|GetCameraBoundMinY|GetCameraBoundMaxX|GetCameraBoundMaxY|GetCameraField|GetCameraTargetPositionX|GetCameraTargetPositionY|GetCameraTargetPositionZ|GetCameraTargetPositionLoc|GetCameraEyePositionX|GetCameraEyePositionY|GetCameraEyePositionZ|GetCameraEyePositionLoc|NewSoundEnvironment|CreateSound|CreateSoundFilenameWithLabel|CreateSoundFromLabel|CreateMIDISound|SetSoundParamsFromLabel|SetSoundDistanceCutoff|SetSoundChannel|SetSoundVolume|SetSoundPitch|SetSoundPlayPosition|SetSoundDistances|SetSoundConeAngles|SetSoundConeOrientation|SetSoundPosition|SetSoundVelocity|AttachSoundToUnit|StartSound|StopSound|KillSoundWhenDone|SetMapMusic|ClearMapMusic|PlayMusic|PlayMusicEx|StopMusic|ResumeMusic|PlayThematicMusic|PlayThematicMusicEx|EndThematicMusic|SetMusicVolume|SetMusicPlayPosition|SetThematicMusicPlayPosition|SetSoundDuration|GetSoundDuration|GetSoundFileDuration|VolumeGroupSetVolume|VolumeGroupReset|GetSoundIsPlaying|GetSoundIsLoading|RegisterStackedSound|UnregisterStackedSound|AddWeatherEffect|RemoveWeatherEffect|EnableWeatherEffect|TerrainDeformCrater|TerrainDeformRipple|TerrainDeformWave|TerrainDeformRandom|TerrainDeformStop|TerrainDeformStopAll|AddSpecialEffect|AddSpecialEffectLoc|AddSpecialEffectTarget|DestroyEffect|AddSpellEffect|AddSpellEffectLoc|AddSpellEffectById|AddSpellEffectByIdLoc|AddSpellEffectTarget|AddSpellEffectTargetById|AddLightning|AddLightningEx|DestroyLightning|MoveLightning|MoveLightningEx|GetLightningColorA|GetLightningColorR|GetLightningColorG|GetLightningColorB|SetLightningColor|GetAbilityEffect|GetAbilityEffectById|GetAbilitySound|GetAbilitySoundById|GetTerrainCliffLevel|SetWaterBaseColor|SetWaterDeforms|GetTerrainType|GetTerrainVariance|SetTerrainType|IsTerrainPathable|SetTerrainPathable|CreateImage|DestroyImage|ShowImage|SetImageConstantHeight|SetImagePosition|SetImageColor|SetImageRender|SetImageRenderAlways|SetImageAboveWater|SetImageType|CreateUbersplat|DestroyUbersplat|ResetUbersplat|FinishUbersplat|ShowUbersplat|SetUbersplatRender|SetUbersplatRenderAlways|SetBlight|SetBlightRect|SetBlightPoint|SetBlightLoc|CreateBlightedGoldmine|IsPointBlighted|SetDoodadAnimation|SetDoodadAnimationRect|StartMeleeAI|StartCampaignAI|CommandAI|PauseCompAI|GetAIDifficulty|RemoveGuardPosition|RecycleGuardPosition|RemoveAllGuardPositions|Cheat|IsNoVictoryCheat|IsNoDefeatCheat|Preload|PreloadEnd|PreloadStart|PreloadRefresh|PreloadEndEx|PreloadGenClear|PreloadGenStart|PreloadGenEnd|Preloader|FALSE|TRUE|JASS_MAX_ARRAY_SIZE|PLAYER_NEUTRAL_PASSIVE|PLAYER_NEUTRAL_AGGRESSIVE|PLAYER_COLOR_RED|PLAYER_COLOR_BLUE|PLAYER_COLOR_CYAN|PLAYER_COLOR_PURPLE|PLAYER_COLOR_YELLOW|PLAYER_COLOR_ORANGE|PLAYER_COLOR_GREEN|PLAYER_COLOR_PINK|PLAYER_COLOR_LIGHT_GRAY|PLAYER_COLOR_LIGHT_BLUE|PLAYER_COLOR_AQUA|PLAYER_COLOR_BROWN|RACE_HUMAN|RACE_ORC|RACE_UNDEAD|RACE_NIGHTELF|RACE_DEMON|RACE_OTHER|PLAYER_GAME_RESULT_VICTORY|PLAYER_GAME_RESULT_DEFEAT|PLAYER_GAME_RESULT_TIE|PLAYER_GAME_RESULT_NEUTRAL|ALLIANCE_PASSIVE|ALLIANCE_HELP_REQUEST|ALLIANCE_HELP_RESPONSE|ALLIANCE_SHARED_XP|ALLIANCE_SHARED_SPELLS|ALLIANCE_SHARED_VISION|ALLIANCE_SHARED_CONTROL|ALLIANCE_SHARED_ADVANCED_CONTROL|ALLIANCE_RESCUABLE|ALLIANCE_SHARED_VISION_FORCED|VERSION_REIGN_OF_CHAOS|VERSION_FROZEN_THRONE|ATTACK_TYPE_NORMAL|ATTACK_TYPE_MELEE|ATTACK_TYPE_PIERCE|ATTACK_TYPE_SIEGE|ATTACK_TYPE_MAGIC|ATTACK_TYPE_CHAOS|ATTACK_TYPE_HERO|DAMAGE_TYPE_UNKNOWN|DAMAGE_TYPE_NORMAL|DAMAGE_TYPE_ENHANCED|DAMAGE_TYPE_FIRE|DAMAGE_TYPE_COLD|DAMAGE_TYPE_LIGHTNING|DAMAGE_TYPE_POISON|DAMAGE_TYPE_DISEASE|DAMAGE_TYPE_DIVINE|DAMAGE_TYPE_MAGIC|DAMAGE_TYPE_SONIC|DAMAGE_TYPE_ACID|DAMAGE_TYPE_FORCE|DAMAGE_TYPE_DEATH|DAMAGE_TYPE_MIND|DAMAGE_TYPE_PLANT|DAMAGE_TYPE_DEFENSIVE|DAMAGE_TYPE_DEMOLITION|DAMAGE_TYPE_SLOW_POISON|DAMAGE_TYPE_SPIRIT_LINK|DAMAGE_TYPE_SHADOW_STRIKE|DAMAGE_TYPE_UNIVERSAL|WEAPON_TYPE_WHOKNOWS|WEAPON_TYPE_METAL_LIGHT_CHOP|WEAPON_TYPE_METAL_MEDIUM_CHOP|WEAPON_TYPE_METAL_HEAVY_CHOP|WEAPON_TYPE_METAL_LIGHT_SLICE|WEAPON_TYPE_METAL_MEDIUM_SLICE|WEAPON_TYPE_METAL_HEAVY_SLICE|WEAPON_TYPE_METAL_MEDIUM_BASH|WEAPON_TYPE_METAL_HEAVY_BASH|WEAPON_TYPE_METAL_MEDIUM_STAB|WEAPON_TYPE_METAL_HEAVY_STAB|WEAPON_TYPE_WOOD_LIGHT_SLICE|WEAPON_TYPE_WOOD_MEDIUM_SLICE|WEAPON_TYPE_WOOD_HEAVY_SLICE|WEAPON_TYPE_WOOD_LIGHT_BASH|WEAPON_TYPE_WOOD_MEDIUM_BASH|WEAPON_TYPE_WOOD_HEAVY_BASH|WEAPON_TYPE_WOOD_LIGHT_STAB|WEAPON_TYPE_WOOD_MEDIUM_STAB|WEAPON_TYPE_CLAW_LIGHT_SLICE|WEAPON_TYPE_CLAW_MEDIUM_SLICE|WEAPON_TYPE_CLAW_HEAVY_SLICE|WEAPON_TYPE_AXE_MEDIUM_CHOP|WEAPON_TYPE_ROCK_HEAVY_BASH|PATHING_TYPE_ANY|PATHING_TYPE_WALKABILITY|PATHING_TYPE_FLYABILITY|PATHING_TYPE_BUILDABILITY|PATHING_TYPE_PEONHARVESTPATHING|PATHING_TYPE_BLIGHTPATHING|PATHING_TYPE_FLOATABILITY|PATHING_TYPE_AMPHIBIOUSPATHING|RACE_PREF_HUMAN|RACE_PREF_ORC|RACE_PREF_NIGHTELF|RACE_PREF_UNDEAD|RACE_PREF_DEMON|RACE_PREF_RANDOM|RACE_PREF_USER_SELECTABLE|MAP_CONTROL_USER|MAP_CONTROL_COMPUTER|MAP_CONTROL_RESCUABLE|MAP_CONTROL_NEUTRAL|MAP_CONTROL_CREEP|MAP_CONTROL_NONE|GAME_TYPE_MELEE|GAME_TYPE_FFA|GAME_TYPE_USE_MAP_SETTINGS|GAME_TYPE_BLIZ|GAME_TYPE_ONE_ON_ONE|GAME_TYPE_TWO_TEAM_PLAY|GAME_TYPE_THREE_TEAM_PLAY|GAME_TYPE_FOUR_TEAM_PLAY|MAP_FOG_HIDE_TERRAIN|MAP_FOG_MAP_EXPLORED|MAP_FOG_ALWAYS_VISIBLE|MAP_USE_HANDICAPS|MAP_OBSERVERS|MAP_OBSERVERS_ON_DEATH|MAP_FIXED_COLORS|MAP_LOCK_RESOURCE_TRADING|MAP_RESOURCE_TRADING_ALLIES_ONLY|MAP_LOCK_ALLIANCE_CHANGES|MAP_ALLIANCE_CHANGES_HIDDEN|MAP_CHEATS|MAP_CHEATS_HIDDEN|MAP_LOCK_SPEED|MAP_LOCK_RANDOM_SEED|MAP_SHARED_ADVANCED_CONTROL|MAP_RANDOM_HERO|MAP_RANDOM_RACES|MAP_RELOADED|MAP_PLACEMENT_RANDOM|MAP_PLACEMENT_FIXED|MAP_PLACEMENT_USE_MAP_SETTINGS|MAP_PLACEMENT_TEAMS_TOGETHER|MAP_LOC_PRIO_LOW|MAP_LOC_PRIO_HIGH|MAP_LOC_PRIO_NOT|MAP_DENSITY_NONE|MAP_DENSITY_LIGHT|MAP_DENSITY_MEDIUM|MAP_DENSITY_HEAVY|MAP_DIFFICULTY_EASY|MAP_DIFFICULTY_NORMAL|MAP_DIFFICULTY_HARD|MAP_DIFFICULTY_INSANE|MAP_SPEED_SLOWEST|MAP_SPEED_SLOW|MAP_SPEED_NORMAL|MAP_SPEED_FAST|MAP_SPEED_FASTEST|PLAYER_SLOT_STATE_EMPTY|PLAYER_SLOT_STATE_PLAYING|PLAYER_SLOT_STATE_LEFT|SOUND_VOLUMEGROUP_UNITMOVEMENT|SOUND_VOLUMEGROUP_UNITSOUNDS|SOUND_VOLUMEGROUP_COMBAT|SOUND_VOLUMEGROUP_SPELLS|SOUND_VOLUMEGROUP_UI|SOUND_VOLUMEGROUP_MUSIC|SOUND_VOLUMEGROUP_AMBIENTSOUNDS|SOUND_VOLUMEGROUP_FIRE|GAME_STATE_DIVINE_INTERVENTION|GAME_STATE_DISCONNECTED|GAME_STATE_TIME_OF_DAY|PLAYER_STATE_GAME_RESULT|PLAYER_STATE_RESOURCE_GOLD|PLAYER_STATE_RESOURCE_LUMBER|PLAYER_STATE_RESOURCE_HERO_TOKENS|PLAYER_STATE_RESOURCE_FOOD_CAP|PLAYER_STATE_RESOURCE_FOOD_USED|PLAYER_STATE_FOOD_CAP_CEILING|PLAYER_STATE_GIVES_BOUNTY|PLAYER_STATE_ALLIED_VICTORY|PLAYER_STATE_PLACED|PLAYER_STATE_OBSERVER_ON_DEATH|PLAYER_STATE_OBSERVER|PLAYER_STATE_UNFOLLOWABLE|PLAYER_STATE_GOLD_UPKEEP_RATE|PLAYER_STATE_LUMBER_UPKEEP_RATE|PLAYER_STATE_GOLD_GATHERED|PLAYER_STATE_LUMBER_GATHERED|PLAYER_STATE_NO_CREEP_SLEEP|UNIT_STATE_LIFE|UNIT_STATE_MAX_LIFE|UNIT_STATE_MANA|UNIT_STATE_MAX_MANA|AI_DIFFICULTY_NEWBIE|AI_DIFFICULTY_NORMAL|AI_DIFFICULTY_INSANE|PLAYER_SCORE_UNITS_TRAINED|PLAYER_SCORE_UNITS_KILLED|PLAYER_SCORE_STRUCT_BUILT|PLAYER_SCORE_STRUCT_RAZED|PLAYER_SCORE_TECH_PERCENT|PLAYER_SCORE_FOOD_MAXPROD|PLAYER_SCORE_FOOD_MAXUSED|PLAYER_SCORE_HEROES_KILLED|PLAYER_SCORE_ITEMS_GAINED|PLAYER_SCORE_MERCS_HIRED|PLAYER_SCORE_GOLD_MINED_TOTAL|PLAYER_SCORE_GOLD_MINED_UPKEEP|PLAYER_SCORE_GOLD_LOST_UPKEEP|PLAYER_SCORE_GOLD_LOST_TAX|PLAYER_SCORE_GOLD_GIVEN|PLAYER_SCORE_GOLD_RECEIVED|PLAYER_SCORE_LUMBER_TOTAL|PLAYER_SCORE_LUMBER_LOST_UPKEEP|PLAYER_SCORE_LUMBER_LOST_TAX|PLAYER_SCORE_LUMBER_GIVEN|PLAYER_SCORE_LUMBER_RECEIVED|PLAYER_SCORE_UNIT_TOTAL|PLAYER_SCORE_HERO_TOTAL|PLAYER_SCORE_RESOURCE_TOTAL|PLAYER_SCORE_TOTAL|EVENT_GAME_VICTORY|EVENT_GAME_END_LEVEL|EVENT_GAME_VARIABLE_LIMIT|EVENT_GAME_STATE_LIMIT|EVENT_GAME_TIMER_EXPIRED|EVENT_GAME_ENTER_REGION|EVENT_GAME_LEAVE_REGION|EVENT_GAME_TRACKABLE_HIT|EVENT_GAME_TRACKABLE_TRACK|EVENT_GAME_SHOW_SKILL|EVENT_GAME_BUILD_SUBMENU|EVENT_PLAYER_STATE_LIMIT|EVENT_PLAYER_ALLIANCE_CHANGED|EVENT_PLAYER_DEFEAT|EVENT_PLAYER_VICTORY|EVENT_PLAYER_LEAVE|EVENT_PLAYER_CHAT|EVENT_PLAYER_END_CINEMATIC|EVENT_PLAYER_UNIT_ATTACKED|EVENT_PLAYER_UNIT_RESCUED|EVENT_PLAYER_UNIT_DEATH|EVENT_PLAYER_UNIT_DECAY|EVENT_PLAYER_UNIT_DETECTED|EVENT_PLAYER_UNIT_HIDDEN|EVENT_PLAYER_UNIT_SELECTED|EVENT_PLAYER_UNIT_DESELECTED|EVENT_PLAYER_UNIT_CONSTRUCT_START|EVENT_PLAYER_UNIT_CONSTRUCT_CANCEL|EVENT_PLAYER_UNIT_CONSTRUCT_FINISH|EVENT_PLAYER_UNIT_UPGRADE_START|EVENT_PLAYER_UNIT_UPGRADE_CANCEL|EVENT_PLAYER_UNIT_UPGRADE_FINISH|EVENT_PLAYER_UNIT_TRAIN_START|EVENT_PLAYER_UNIT_TRAIN_CANCEL|EVENT_PLAYER_UNIT_TRAIN_FINISH|EVENT_PLAYER_UNIT_RESEARCH_START|EVENT_PLAYER_UNIT_RESEARCH_CANCEL|EVENT_PLAYER_UNIT_RESEARCH_FINISH|EVENT_PLAYER_UNIT_ISSUED_ORDER|EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER|EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER|EVENT_PLAYER_UNIT_ISSUED_UNIT_ORDER|EVENT_PLAYER_HERO_LEVEL|EVENT_PLAYER_HERO_SKILL|EVENT_PLAYER_HERO_REVIVABLE|EVENT_PLAYER_HERO_REVIVE_START|EVENT_PLAYER_HERO_REVIVE_CANCEL|EVENT_PLAYER_HERO_REVIVE_FINISH|EVENT_PLAYER_UNIT_SUMMON|EVENT_PLAYER_UNIT_DROP_ITEM|EVENT_PLAYER_UNIT_PICKUP_ITEM|EVENT_PLAYER_UNIT_USE_ITEM|EVENT_PLAYER_UNIT_LOADED|EVENT_UNIT_DAMAGED|EVENT_UNIT_DEATH|EVENT_UNIT_DECAY|EVENT_UNIT_DETECTED|EVENT_UNIT_HIDDEN|EVENT_UNIT_SELECTED|EVENT_UNIT_DESELECTED|EVENT_UNIT_STATE_LIMIT|EVENT_UNIT_ACQUIRED_TARGET|EVENT_UNIT_TARGET_IN_RANGE|EVENT_UNIT_ATTACKED|EVENT_UNIT_RESCUED|EVENT_UNIT_CONSTRUCT_CANCEL|EVENT_UNIT_CONSTRUCT_FINISH|EVENT_UNIT_UPGRADE_START|EVENT_UNIT_UPGRADE_CANCEL|EVENT_UNIT_UPGRADE_FINISH|EVENT_UNIT_TRAIN_START|EVENT_UNIT_TRAIN_CANCEL|EVENT_UNIT_TRAIN_FINISH|EVENT_UNIT_RESEARCH_START|EVENT_UNIT_RESEARCH_CANCEL|EVENT_UNIT_RESEARCH_FINISH|EVENT_UNIT_ISSUED_ORDER|EVENT_UNIT_ISSUED_POINT_ORDER|EVENT_UNIT_ISSUED_TARGET_ORDER|EVENT_UNIT_HERO_LEVEL|EVENT_UNIT_HERO_SKILL|EVENT_UNIT_HERO_REVIVABLE|EVENT_UNIT_HERO_REVIVE_START|EVENT_UNIT_HERO_REVIVE_CANCEL|EVENT_UNIT_HERO_REVIVE_FINISH|EVENT_UNIT_SUMMON|EVENT_UNIT_DROP_ITEM|EVENT_UNIT_PICKUP_ITEM|EVENT_UNIT_USE_ITEM|EVENT_UNIT_LOADED|EVENT_WIDGET_DEATH|EVENT_DIALOG_BUTTON_CLICK|EVENT_DIALOG_CLICK|EVENT_GAME_LOADED|EVENT_GAME_TOURNAMENT_FINISH_SOON|EVENT_GAME_TOURNAMENT_FINISH_NOW|EVENT_GAME_SAVE|EVENT_PLAYER_ARROW_LEFT_DOWN|EVENT_PLAYER_ARROW_LEFT_UP|EVENT_PLAYER_ARROW_RIGHT_DOWN|EVENT_PLAYER_ARROW_RIGHT_UP|EVENT_PLAYER_ARROW_DOWN_DOWN|EVENT_PLAYER_ARROW_DOWN_UP|EVENT_PLAYER_ARROW_UP_DOWN|EVENT_PLAYER_ARROW_UP_UP|EVENT_PLAYER_UNIT_SELL|EVENT_PLAYER_UNIT_CHANGE_OWNER|EVENT_PLAYER_UNIT_SELL_ITEM|EVENT_PLAYER_UNIT_SPELL_CHANNEL|EVENT_PLAYER_UNIT_SPELL_CAST|EVENT_PLAYER_UNIT_SPELL_EFFECT|EVENT_PLAYER_UNIT_SPELL_FINISH|EVENT_PLAYER_UNIT_SPELL_ENDCAST|EVENT_PLAYER_UNIT_PAWN_ITEM|EVENT_UNIT_SELL|EVENT_UNIT_CHANGE_OWNER|EVENT_UNIT_SELL_ITEM|EVENT_UNIT_SPELL_CHANNEL|EVENT_UNIT_SPELL_CAST|EVENT_UNIT_SPELL_EFFECT|EVENT_UNIT_SPELL_FINISH|EVENT_UNIT_SPELL_ENDCAST|EVENT_UNIT_PAWN_ITEM|LESS_THAN|LESS_THAN_OR_EQUAL|EQUAL|GREATER_THAN_OR_EQUAL|GREATER_THAN|NOT_EQUAL|UNIT_TYPE_HERO|UNIT_TYPE_DEAD|UNIT_TYPE_STRUCTURE|UNIT_TYPE_FLYING|UNIT_TYPE_GROUND|UNIT_TYPE_ATTACKS_FLYING|UNIT_TYPE_ATTACKS_GROUND|UNIT_TYPE_MELEE_ATTACKER|UNIT_TYPE_RANGED_ATTACKER|UNIT_TYPE_GIANT|UNIT_TYPE_SUMMONED|UNIT_TYPE_STUNNED|UNIT_TYPE_PLAGUED|UNIT_TYPE_SNARED|UNIT_TYPE_UNDEAD|UNIT_TYPE_MECHANICAL|UNIT_TYPE_PEON|UNIT_TYPE_SAPPER|UNIT_TYPE_TOWNHALL|UNIT_TYPE_ANCIENT|UNIT_TYPE_TAUREN|UNIT_TYPE_POISONED|UNIT_TYPE_POLYMORPHED|UNIT_TYPE_SLEEPING|UNIT_TYPE_RESISTANT|UNIT_TYPE_ETHEREAL|UNIT_TYPE_MAGIC_IMMUNE|ITEM_TYPE_PERMANENT|ITEM_TYPE_CHARGED|ITEM_TYPE_POWERUP|ITEM_TYPE_ARTIFACT|ITEM_TYPE_PURCHASABLE|ITEM_TYPE_CAMPAIGN|ITEM_TYPE_MISCELLANEOUS|ITEM_TYPE_UNKNOWN|ITEM_TYPE_ANY|ITEM_TYPE_TOME|CAMERA_FIELD_TARGET_DISTANCE|CAMERA_FIELD_FARZ|CAMERA_FIELD_ANGLE_OF_ATTACK|CAMERA_FIELD_FIELD_OF_VIEW|CAMERA_FIELD_ROLL|CAMERA_FIELD_ROTATION|CAMERA_FIELD_ZOFFSET|BLEND_MODE_NONE|BLEND_MODE_DONT_CARE|BLEND_MODE_KEYALPHA|BLEND_MODE_BLEND|BLEND_MODE_ADDITIVE|BLEND_MODE_MODULATE|BLEND_MODE_MODULATE_2X|RARITY_FREQUENT|RARITY_RARE|TEXMAP_FLAG_NONE|TEXMAP_FLAG_WRAP_U|TEXMAP_FLAG_WRAP_V|TEXMAP_FLAG_WRAP_UV|FOG_OF_WAR_MASKED|FOG_OF_WAR_FOGGED|FOG_OF_WAR_VISIBLE|CAMERA_MARGIN_LEFT|CAMERA_MARGIN_RIGHT|CAMERA_MARGIN_TOP|CAMERA_MARGIN_BOTTOM|EFFECT_TYPE_EFFECT|EFFECT_TYPE_TARGET|EFFECT_TYPE_CASTER|EFFECT_TYPE_SPECIAL|EFFECT_TYPE_AREA_EFFECT|EFFECT_TYPE_MISSILE|EFFECT_TYPE_LIGHTNING|SOUND_TYPE_EFFECT|SOUND_TYPE_EFFECT_LOOPED
			)\b</string>
			<key>name</key>
			<string>support.function.builtin.wurst</string>
		</dict>
		<key>builtin_modifiers</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
				constant|scope|initializer|takes|nothing|returns|end|endscope|static|public|module|enum|private|new|package|library|endlibrary|native|let|var|castTo|destroy|init|interface|loop
			)\b</string>
			<key>name</key>
			<string>support.type.modifier.wurst</string>
		</dict>
		<key>builtin_types</key>
		<dict>
			<key>match</key>
			<string>(?x)\b(
				int|integer|real|code|boolean|string|bool|agent|event|player|widget|unit|destructable|item|ability|buff|force|group|trigger|triggercondition|triggeraction|timer|location|region|rect|boolexpr|sound|conditionfunc|filterfunc|unitpool|itempool|race|alliancetype|racepreference|gamestate|igamestate|fgamestate|playerstate|playerscore|playergameresult|unitstate|aidifficulty|eventid|gameevent|playerevent|playerunitevent|unitevent|limitop|widgetevent|dialogevent|unittype|gamespeed|gamedifficulty|gametype|mapflag|mapvisibility|mapsetting|mapdensity|mapcontrol|playerslotstate|volumegroup|camerafield|camerasetup|playercolor|placement|startlocprio|raritycontrol|blendmode|texmapflags|effect|effecttype|weathereffect|terraindeformation|fogstate|fogmodifier|dialog|button|quest|questitem|defeatcondition|timerdialog|leaderboard|multiboard|multiboarditem|trackable|gamecache|version|itemtype|texttag|attacktype|damagetype|weapontype|soundtype|lightning|pathingtype|image|ubersplat|hashtable
			)\b</string>
			<key>name</key>
			<string>support.type.wurst</string>
		</dict>
		<key>constant_placeholder</key>
		<dict>
			<key>match</key>
			<string>(?i:%(\([a-z_]+\))?#?0?\-?[ ]?\+?([0-9]*|\*)(\.([0-9]*|\*))?[hL]?[a-z%])</string>
			<key>name</key>
			<string>constant.other.placeholder.wurst</string>
		</dict>
		<key>docstrings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?""")</string>
					<key>end</key>
					<string>(?&lt;=""")</string>
					<key>name</key>
					<string>comment.block.wurst</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_double</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>^\s*(?=[uU]?[rR]?''')</string>
					<key>end</key>
					<string>(?&lt;=''')</string>
					<key>name</key>
					<string>comment.block.wurst</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#string_quoted_single</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>dotted_name</key>
		<dict>
			<key>begin</key>
			<string>(?=[A-Za-z_][A-Za-z0-9_]*(?:\.[A-Za-z_][A-Za-z0-9_]*)*)</string>
			<key>end</key>
			<string>(?![A-Za-z0-9_\.])</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(\.)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?&lt;!\.)(?=[A-Za-z_][A-Za-z0-9_]*)</string>
					<key>end</key>
					<string>(?![A-Za-z0-9_])</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin_functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_types</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin_modifiers</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#illegal_names</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#language_variables</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#generic_names</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>entity_name_class</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>entity_name_function</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#illegal_names</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>escaped_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.hex.wurst</string>
				</dict>
				<key>10</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.linefeed.wurst</string>
				</dict>
				<key>11</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.return.wurst</string>
				</dict>
				<key>12</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.tab.wurst</string>
				</dict>
				<key>13</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.vertical-tab.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.octal.wurst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.newline.wurst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backlash.wurst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.double-quote.wurst</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.single-quote.wurst</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.bell.wurst</string>
				</dict>
				<key>8</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.backspace.wurst</string>
				</dict>
				<key>9</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.formfeed.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\x[0-9A-F]{2})|(\\[0-7]{3})|(\\\n)|(\\\\)|(\\\")|(\\')|(\\a)|(\\b)|(\\f)|(\\n)|(\\r)|(\\t)|(\\v)</string>
		</dict>
		<key>escaped_unicode_char</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.16-bit-hex.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.32-bit-hex.wurst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.escape.unicode.name.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\U[0-9A-Fa-f]{8})|(\\u[0-9A-Fa-f]{4})|(\\N\{[a-zA-Z ]+\})</string>
		</dict>
		<key>function_name</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin_functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_types</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#builtin_modifiers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#generic_names</string>
				</dict>
			</array>
		</dict>
		<key>generic_names</key>
		<dict>
			<key>match</key>
			<string>[A-Za-z_][A-Za-z0-9_]*</string>
		</dict>
		<key>illegal_names</key>
		<dict>
			<key>match</key>
			<string>\b(and|break|class|function|method|else|elseif|for|from|global|if|import|in|not|or|skip|return|while|struct|native|loop)\b</string>
			<key>name</key>
			<string>invalid.illegal.name.wurst</string>
		</dict>
		<key>keyword_arguments</key>
		<dict>
			<key>begin</key>
			<string>\b([a-zA-Z_][a-zA-Z_0-9]*)\s*(=)(?!=)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>variable.parameter.function.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment.wurst</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\s*(?:(,)|(?=$\n?|[\)\:]))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.parameters.wurst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>language_variables</key>
		<dict>
			<key>match</key>
			<string>\b(this|thistype|compiletime|true|false|null|array)\b</string>
			<key>name</key>
			<string>support.constant.wurst</string>
		</dict>
		<key>line_continuation</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.continuation.line.wurst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.unexpected-text.wurst</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\)(.*)$\n?</string>
		</dict>
		<key>regular_expressions</key>
		<dict>
			<key>comment</key>
			<string>Changed disabled to 1 to turn off syntax highlighting in “r” strings.</string>
			<key>disabled</key>
			<integer>0</integer>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>source.regexp.wurst</string>
				</dict>
			</array>
		</dict>
		<key>string_quoted_double</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(")(?=\s*(SELECT|INSERT|UPDATE|DELETE|CREATE|REPLACE|ALTER))</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.wurst</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.wurst</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.wurst</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.wurst</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.sql.wurst</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.wurst</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>double quoted string</string>
					<key>end</key>
					<string>((?&lt;=")(")|")|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.wurst</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.double.wurst</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.wurst</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.single-line.wurst</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>string_quoted_single</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.wurst</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.wurst</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>meta.empty-string.single.wurst</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!')(')(('))(?!')</string>
					<key>name</key>
					<string>string.quoted.single.single-line.wurst</string>
				</dict>

				<!-- Single-quoted string -->
				<dict>
					<key>begin</key>
					<string>(')</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.wurst</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>single quoted string</string>
					<key>end</key>
					<string>(')|(\n)</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.wurst</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.unclosed-string.wurst</string>
						</dict>
					</dict>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal.mapping.jass.wurst</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#constant_placeholder</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#escaped_char</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#string_quoted_double</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#string_quoted_single</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.wurst</string>
</dict>
</plist>
